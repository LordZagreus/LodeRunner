<params>
	<param key = 'layer' value = '1' />
	<param key = 'type' value = 'overworld' />
</params>
<planes>
	<plane name = 'Untitled Plane' x = '0' y = '0' modal = '0'>
		<structure>
			0 0 0 327 330 0 0 0 0 0 0 0 0 0 0 0 0 0 328 334 323 324 0 
			0 328 332 303 303 328 0 0 207 152 0 0 0 0 0 0 0 326 303 0 144 0 0 
			0 0 144 0 303 303 28 28 26 325 328 152 0 0 0 0 0 274 0 0 144 0 0 
			0 0 144 0 0 0 274 0 0 0 303 332 152 0 0 0 0 273 0 0 207 0 0 
			218 216 144 0 0 0 275 0 0 0 0 0 152 0 0 0 330 330 0 0 0 0 0 
			0 0 207 0 0 0 275 0 152 331 257 326 254 330 152 0 274 303 326 0 0 0 0 
			0 0 0 0 0 0 275 0 152 303 303 0 303 303 152 0 275 0 0 0 0 0 0 
			0 0 0 0 0 9 273 0 152 0 0 330 0 0 152 0 273 0 0 0 0 0 0 
			0 0 0 0 152 325 256 331 152 0 0 0 0 0 152 333 324 330 152 0 0 0 0 
			329 152 0 152 324 342 303 303 334 152 0 0 0 152 327 303 342 303 333 152 0 0 329 
			303 328 152 326 303 303 303 342 303 331 333 152 324 333 303 303 303 303 303 328 152 323 303 
			0 303 152 0 0 0 303 303 303 0 0 152 0 0 274 303 303 303 0 0 152 303 0 
			0 303 334 152 0 0 0 303 274 0 152 303 152 0 334 303 303 0 0 152 333 303 0 
			216 0 303 326 152 0 0 0 273 0 152 0 152 0 273 0 0 0 152 327 303 0 0 
			0 216 0 303 327 333 152 329 256 325 330 152 331 332 24 23 27 328 152 303 0 0 0 
			0 0 216 216 216 216 152 0 274 0 303 152 303 303 303 303 0 0 152 0 0 0 0 
		</structure>
	</plane>
	<plane name = 'mask1' x = '0' y = '0' modal = '1'>
		<structure>
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 302 0 
			0 300 0 349 0 345 0 0 0 0 0 0 0 0 0 0 0 0 302 0 0 0 0 
			0 0 0 0 300 263 0 0 0 283 341 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 300 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 343 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 342 0 340 0 0 0 0 0 300 343 0 0 0 0 
			0 0 0 0 0 0 0 0 0 300 0 0 0 302 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 345 0 342 0 0 0 0 0 0 0 341 0 0 0 0 0 0 0 
			344 0 0 0 0 0 0 349 343 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			300 0 0 0 349 0 0 0 0 344 343 0 0 0 0 0 0 0 348 342 0 341 302 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 302 0 0 0 0 0 
			0 300 344 0 0 0 0 302 0 0 0 0 0 0 345 0 302 0 0 0 344 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 302 0 0 
			0 0 0 300 0 0 0 0 0 343 0 0 341 263 0 0 0 283 0 302 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
		</structure>
	</plane>
</planes>
<entities>
	<entity x = '5' y = '13' genus = '3' species = 'generic' ai-behavior = '5' name = 'npc1' class = 'npc class1 class2' nick = 'Kev' title = '' />
	<entity x = '10' y = '4' genus = '3' species = 'generic' ai-behavior = '5' name = 'npc2' class = 'merchant class2 class3' nick = 'Nichole' title = '' />
<entity name = 'gold0' title = '' ai-behavior = '1' nick = '' y = '3' x = '7' genus = '6' class = '' />
<entity name = 'gold1' title = '' ai-behavior = '1' nick = '' y = '6' x = '11' genus = '6' class = '' />
<entity name = 'gold2' title = '' ai-behavior = '1' nick = '' y = '4' x = '13' genus = '6' class = '' />
<entity name = 'gold3' title = '' ai-behavior = '1' nick = '' y = '11' x = '14' genus = '6' class = '' />
<entity name = 'gold4' title = '' ai-behavior = '1' nick = '' y = '12' x = '6' genus = '6' class = '' />
<entity name = 'gold5' title = '' ai-behavior = '1' nick = '' y = '6' x = '17' genus = '6' class = '' />
<entity name = 'gold6' title = '' ai-behavior = '1' nick = '' y = '4' x = '18' genus = '6' class = '' />
<entity name = 'gold7' title = '' ai-behavior = '1' nick = '' y = '0' x = '17' genus = '6' class = '' />
<entity name = 'gold8' title = '' ai-behavior = '1' nick = '' y = '8' x = '9' genus = '6' class = '' />
<entity name = 'gold9' title = '' ai-behavior = '1' nick = '' y = '13' x = '17' genus = '6' class = '' />
<entity name = 'gold10' title = '' ai-behavior = '1' nick = '' y = '4' x = '2' genus = '6' class = '' />
<entity name = 'gold11' title = '' ai-behavior = '1' nick = '' y = '9' x = '1' genus = '6' class = '' />
<entity name = 'gold12' title = '' ai-behavior = '1' nick = '' y = '1' x = '6' genus = '6' class = '' />
</entities>
<triggers>
<trigger prompt = '@talk:Kev' name = 'npc1.talk' height = '3' width = '3' behavior = '3' y = '12' x = '4' class = 'talk'>
	<touch />
	<hover>
		<script name = 'npc1.talk' />
	</hover>
	<exit />
</trigger>
<trigger prompt = '@talk:Nichole' name = 'npc2.talk' height = '3' width = '3' behavior = '3' y = '3' x = '9' class = 'talk'>
	<touch />
	<hover>
		<script name = 'npc2.talk' />
	</hover>
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.a' height = '1' width = '1' behavior = '1' y = '13' x = '9'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.b' height = '1' width = '1' behavior = '1' y = '13' x = '16'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.c0' height = '1' width = '1' behavior = '1' y = '13' x = '12'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.c' height = '1' width = '1' behavior = '1' y = '11' x = '12'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.d' height = '1' width = '1' behavior = '1' y = '13' x = '7'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc1.e' height = '1' width = '1' behavior = '1' y = '11' x = '19'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc2.a' height = '1' width = '1' behavior = '1' y = '4' x = '14'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc2.b' height = '1' width = '1' behavior = '1' y = '1' x = '10'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc2.c' height = '1' width = '1' behavior = '1' y = '4' x = '8'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc2.d' height = '1' width = '1' behavior = '1' y = '9' x = '10'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'npc2.e' height = '1' width = '1' behavior = '1' y = '9' x = '13'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '#puzzle:puzzle3' name = 'puzzle3.enter' height = '1' width = '1' behavior = '3' y = '7' x = '5' class = 'door'>
	<touch />
	<hover>
		<script name = 'puzzle3.enter' />
	</hover>
	<exit />
</trigger>
<trigger prompt = '' name = 'spawn' height = '1' width = '1' behavior = '1' y = '9' x = '11'>
	<touch />
	<hover />
	<exit />
</trigger>
<trigger prompt = '' name = 'safe-spawn' height = '1' width = '1' behavior = '1' y = '7' x = '15'>
	<touch />
	<hover />
	<exit />
</trigger>
</triggers>
<scripts>
	<script name = 'puzzle3.enter'>
		// Load new map from puzzle.enter trigger.  Spawn at origin.
        trigger("puzzle3.enter").loadMap("puzzle3", "origin");
	</script>
	<script name = 'npc1.talk'>
		// Disable all dialogue by default
npc("npc1").conversation("default").branch("root").getLinesByClass("*").disable();

// Is Nichole dead?
if ( quest("1.3.npc1.quest").update("flag-killed-nichole").status() == "active" )
{
// Enable "she&apos;s dead" lines
npc("npc1").conversation("default").branch("root").getLinesByClass("nichole-dead").enable();
}

// Still alive
else
{
// Enable "she&apos;s alive" lines
npc("npc1").conversation("default").branch("root").getLinesByClass("nichole-alive").enable();
}

// talk
npc("npc1").talk("default");
	</script>
	<script name = 'npc2.ondeath'>
		// npc2 Nichole here is the target of 1.3 Curry&apos;s kill quest.
        #define QUEST "1.3.npc1.quest"

        #define FLAG_KILLED_CURRY "flag-killed-curry"
        #define FLAG_KILLED_NICHOLE "flag-killed-nichole"

        #define UPDATE_EXTORTED "update-extorted"
        #define UPDATE_WARNED_NICHOLE "update-warned-nichole"
        #define UPDATE_KILLED_NICHOLE_UNWITTINGLY "update-killed-nichole:unwittingly"
        #define UPDATE_KILLED_NICHOLE_AFTER_WARNING "update-killed-nichole:after-warning"
        #define UPDATE_KILLED_NICHOLE_WITHOUT_WARNING "update-killed-nichole:without-warning"


        // If quest is inactive, then we got her super fast
        if ( quest(QUEST).status() == "inactive" )
        {
            // Just flag for now
            quest(QUEST).update(UPDATE_KILLED_NICHOLE_UNWITTINGLY).status("active");
        }

        // For now, let&apos;s run this logic in all other scenarios.
        // It&apos;s possible we already failed quest by warning, then turning in, but that&apos;s ok for now.
        else
        {
            // Did we warn Nichole before killing her?
            if ( quest(QUEST).update(UPDATE_WARNED_NICHOLE).status() == "active" )
            {
                // killed after warning
                quest(QUEST).update(UPDATE_KILLED_NICHOLE_AFTER_WARNING).status("active");
            }

            // No, we gave her no warning at all.  Maybe quest isn&apos;t even active, no reason to kill her!
            else
            {
                // no warning
                quest(QUEST).update(UPDATE_KILLED_NICHOLE_WITHOUT_WARNING).status("active");
            }
        }


        // always flag Nichole&apos;s general death
        quest(QUEST).update(FLAG_KILLED_NICHOLE).status("active");

        // disable talk trigger
        trigger("npc2.talk").disable();
	</script>
	<script name = 'npc2.shop'>
		// always same quality of items for this merchant
        npc("npc2").clearWarehouses()
                   .addWarehouse("warehouse1+");

        // shop
        npc("npc2").shop({
            "min-quality": 1,
            "max-quality": 1,
            "max-items": 3,
            "max-reloads": 2,
            "required-item-names": ["a", "b"]
        });
	</script>
	<script name = 'npc2.talk'>
		// npc2 Nichole here is the target of 1.3 Curry&apos;s kill quest.
        #define QUEST "1.3.npc1.quest"

        #define FLAG_KILLED_CURRY "flag-killed-curry"
        #define FLAG_KILLED_NICHOLE "flag-killed-nichole"

        #define UPDATE_EXTORTED "update-extorted"
        #define UPDATE_WARNED_NICHOLE "update-warned-nichole"
        #define UPDATE_KILLED_NICHOLE_AFTER_WARNING "update-killed-nichole:after-warning"
        #define UPDATE_KILLED_NICHOLE_WITHOUT_WARNING "update-killed-nichole:without-warning"


        // Real quick, let&apos;s see if tax quest is active.  It affects all merchants.
        if ( ( quest("2.3.npc1.quest").status() == "active" ) and
             ( npc("npc2").conversation("global.tax").branch("root").getLinesByClass("request-tax").selectActive().countUnread() &gt; 0 ) )
        {
            // Use tax conversation, queueing this same script to run again afterward...
            npc("npc2").talk("global.tax");
        }

        // If we don&apos;t need to ask for the tax (or we already asked for it),
        // then we&apos;ll go with the standard conversation logic
        else
        {
            // Always disable warning responses by default.  Enable on case-to-case basis.
            npc("npc2").conversation("default").branch("root").getLinesByClass("*").getResponsesByClass("warning").disable();

            // If quest is inactive, then there&apos;s no warning or anything to be done
            if ( quest(QUEST).status() == "inactive" )
            {
                // Normal shop talk
                npc("npc2").talk("default", "shop");
            }

            // If we killed Curry to "save" Nichole and we never warned her, then we can
            // add a "saved you" response
            elif ( quest(QUEST).status() == "failed" )
            {
                // Only if we didn&apos;t warn her already!
                if ( quest(QUEST).update(UPDATE_WARNED_NICHOLE).status() != "active" )
                {
                    // Did we kill Curry?
                    if ( quest(QUEST).update(FLAG_KILLED_CURRY).status() == "active" )
                    {
                        // Enable "killed that guy, saved-you" response
                        npc("npc2").conversation("default").branch("root").getLinesByClass("*").getResponsesByClass("saved-you").enable();
                    }
                }

                // talk normal, possibly with additional "saved you" response option
                npc("npc2").talk("default", "shop");
            }

            // If quest is active, we can either warn (once), inform we killed Curry (once), or choose default response (e.g. shop/bye)
            elif ( quest(QUEST).status() == "active" )
            {
                // Have we not warned Nichole yet?
                if ( quest(QUEST).update(UPDATE_WARNED_NICHOLE).status() != "active" )
                {
                    // Did we kill Curry?
                    if ( quest(QUEST).update(FLAG_KILLED_CURRY).status() == "active" )
                    {
                        // Enable "killed that guy, saved-you" response
                        npc("npc2").conversation("default").branch("root").getLinesByClass("*").getResponsesByClass("saved-you").enable();
                    }

                    // Otherwise, it&apos;s a quick warning
                    else
                    {
                        // Enable "that guys wants to kill yoU" response
                        npc("npc2").conversation("default").branch("root").getLinesByClass("*").getResponsesByClass("hitlist").enable();
                    }
                }

                // Talk.  Maybe player issues warning / saved you message, maybe not.  It&apos;ll be there until they do.
                npc("npc2").talk("default", "shop");
            }

            else
            {
                // Just talk.
                npc("npc2").talk("default", "shop");
            }
        }
	</script>
	<script name = 'onvisit'>
		// Default to merchant indicator for Nichole
        npc("npc2").clearIndicators().addIndicator("merchant");

        // If Curry&apos;s kill quest is active and we haven&apos;t warned Nichole,
        // mark her as a target.
        if (
            quest("1.3.npc1.quest").status() == "active" and
            quest("1.3.npc1.quest").update("update-warned-nichole").status() != "active"
        )
        {
            // Mark as target
            npc("npc2").addIndicator("target");
        }

        else
        {
            // (We could still kill her, but she won&apos;t be an active target since we warned her...)
        }
	</script>
	<script name = 'debug'>
		debug( "let&apos;s test the iterator..." );
        each( npcsByClass("class2") )
        {
            this.die();
            debug( "looping???" );
        }
        debug ("test complete...");
	</script>
	<script name = 'onload'>
		// paths
        npc("npc1").addHotspot("npc1.a")
                   .addHotspot("sleep(1.0)")
                   .addHotspot("npc1.b")
                   .addHotspot("sleep(0.5)")
                   .addHotspot("npc1.c0")
                   .addHotspot("npc1.c")
                   .addHotspot("sleep(1.5)")
                   .addHotspot("npc1.d")
                   .addHotspot("sleep(2.0)")
                   .addHotspot("npc1.a")
                   .addHotspot("sleep(0.75)")
                   .addHotspot("npc1.b")
                   .addHotspot("npc1.e")
                   .addHotspot("sleep(1.5)");

        // trigger follow
        trigger("npc1.talk").follow("npc1");

        // paths
        npc("npc2").addHotspot("npc2.a")
                   .addHotspot("sleep(1.25)")
                   .addHotspot("npc2.b")
                   .addHotspot("sleep(0.75)")
                   .addHotspot("npc2.c")
                   .addHotspot("npc2.d")
                   .addHotspot("sleep(1.5)")
                   .addHotspot("npc2.e")
                   .addHotspot("sleep(1.0)")
                   .addHotspot("npc2.d")
                   .addHotspot("npc2.c")
                   .addHotspot("sleep(0.5)")
                   .addHotspot("npc2.a")
                   .addHotspot("npc2.e")
                   .addHotspot("sleep(1.0)");

        // trigger follow
        trigger("npc2.talk").follow("npc2");
	</script>
</scripts>
