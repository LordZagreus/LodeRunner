<params>
	<param key = 'layer' value = '1' />
	<param key = 'type' value = 'challenge' />
</params>
<planes>
	<plane name = 'Untitled Plane' x = '0' y = '0' modal = '0'>
		<structure>
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 214 213 0 0 213 0 0 0 0 0 214 0 0 0 0 
			187 189 0 0 182 183 0 0 189 154 199 0 0 194 199 0 0 186 208 
			168 152 217 216 217 217 0 186 207 152 174 199 0 216 219 219 216 152 199 
			0 154 0 0 0 0 199 166 181 153 172 179 182 0 0 0 0 152 0 
			0 154 213 219 0 0 212 0 0 153 219 218 0 0 0 0 0 152 0 
			0 154 189 0 184 154 199 212 0 154 0 214 190 154 208 0 199 153 212 
			209 152 160 0 178 153 179 198 184 153 189 199 173 154 193 0 167 153 199 
			199 153 0 0 212 152 214 219 217 153 0 0 0 154 211 218 213 154 179 
			0 152 181 0 183 152 199 0 0 153 215 0 194 153 185 0 196 152 0 
			194 154 179 0 160 153 179 191 181 152 199 195 171 152 179 0 179 153 199 
			172 153 214 218 0 152 0 0 0 152 219 217 211 152 0 0 0 154 163 
			0 154 199 0 199 153 209 211 212 152 0 0 199 153 196 0 196 152 0 
			0 199 177 85 177 199 184 199 199 183 180 187 179 160 179 84 179 199 0 
			0 0 170 179 169 0 0 0 0 179 0 0 0 0 176 190 163 0 0 
		</structure>
	</plane>
	<plane name = 'mask' x = '0' y = '0' modal = '1'>
		<structure>
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 300 302 0 0 0 0 0 0 0 300 302 0 0 0 0 
			300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 302 
			0 0 0 0 0 0 300 0 302 0 300 0 302 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 302 0 0 0 0 0 302 0 300 0 0 0 302 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 300 0 0 0 302 0 300 0 302 0 0 0 300 0 0 
			302 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
			0 0 300 0 302 0 0 0 0 300 0 0 0 0 300 0 302 0 0 
		</structure>
	</plane>
</planes>
<entities>
	<entity x = '8' y = '9' genus = '2' ai-behavior = '1' name = 'player1' class = '' nick = '' title = '' />
	<entity x = '2' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '6' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '12' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '16' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '15' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '3' y = '0' genus = '5' ai-behavior = '1' name = '' class = '' nick = '' title = '' />
	<entity x = '11' y = '2' genus = '6' ai-behavior = '1' name = 'gold.uid.0' class = '' nick = '' title = '' />
	<entity x = '4' y = '3' genus = '6' ai-behavior = '1' name = 'gold.uid.1' class = '' nick = '' title = '' />
	<entity x = '3' y = '8' genus = '6' ai-behavior = '1' name = 'gold.uid.2' class = '' nick = '' title = '' />
	<entity x = '4' y = '5' genus = '6' ai-behavior = '1' name = 'gold.uid.3' class = '' nick = '' title = '' />
	<entity x = '7' y = '12' genus = '6' ai-behavior = '1' name = 'gold.uid.4' class = '' nick = '' title = '' />
	<entity x = '14' y = '11' genus = '6' ai-behavior = '1' name = 'gold.uid.5' class = '' nick = '' title = '' />
	<entity x = '15' y = '7' genus = '6' ai-behavior = '1' name = 'gold.uid.6' class = '' nick = '' title = '' />
	<entity x = '9' y = '1' genus = '6' ai-behavior = '1' name = 'gold.uid.7' class = '' nick = '' title = '' />
	<entity x = '11' y = '9' genus = '6' ai-behavior = '1' name = 'gold.uid.8' class = '' nick = '' title = '' />
	<entity x = '11' y = '12' genus = '6' ai-behavior = '1' name = 'gold.uid.9' class = '' nick = '' title = '' />
</entities>
<triggers>
	<trigger name = 'origin' x = '8' y = '12' width = '1' height = '1' behavior = '1' prompt = ''>
		<touch>
		</touch>
		<hover>
		</hover>
		<exit>
		</exit>
	</trigger>
</triggers>
<scripts>
	<script name = 'on-arrival'>
        if ( session("core.challenge.wave").get() == 1 ) { map().runScript("wave1:begin"); }
        elif ( session("core.challenge.wave").get() == 2 ) { map().runScript("wave2:begin"); }
        elif ( session("core.challenge.wave").get() == 3 ) { map().runScript("wave3:begin"); }
        else { map().runScript("wave1:begin"); }
    </script>
	<script name = 'wave1:begin'>
		map().executeScript("wave1:cleanup");

        // Params
        map()
            .enableAllGold()    // bring all gold online

            // text labels
            .setParams({
                "overview": "Without access to your mining laser, collect all of the gold on the map.",
                "wave-goal": "You must rely on your wits alone to evade the bad guys and collect all of the gold.  Each time you touch a piece of gold, all of the [color=special]enemies[/color] will die and respawn!"
            })

            // player can't dig this wave
            .setWaveAllowances({
                "digs": 0
            })

            .setWaveParams({
                "on-complete": "wave1:complete",         // complete wave script
                "on-collect-gold": "wave1:kill-enemies", // touching gold respawns all enemies
                "enemies-collect-gold": False            // it'd be too hard otherwise
            });

        // Player must collect all gold
        map().setWaveRequirement(
            "gold",
            map().countGold()
        );

        // Show progress chart / begin new wave
        map()
            .showWaveProgressChart()
            .beginWave();


        // Start with 5 respawners
map().spawnRandomEnemies(
            5,
            {
                "disposable": False
            }
        );
	</script>
	<script name = 'wave1:cleanup'>
		// Remove timer(s)
        // NO timer on this wave

        // End wave
        map().endWave();
	</script>
	<script name = 'wave1:kill-enemies'>
		// Kill all enemies, but let them respawn
        map().killEnemies();
	</script>
	<script name = 'wave1:complete'>
		map().executeScript("wave1:cleanup");

        // Track that we advanced to the next wave
        session("core.challenge.wave").increment(1);

        // Remove enemies
        map().removeEnemies();

        // Post complete nag
postNewsItem("Wave Complete!", "Prepare for another wave...");

        // Advance to next wave in a moment
        createTimer({
            "name": "timerNextWave",
            "on-complete": "script:wave2:begin",
            "length": 5,
            "measure": "seconds"
        });
	</script>
	<script name = 'wave2:begin'>
		map().executeScript("wave2:cleanup");

        // Params
        map()
            .disableAllGold()    // take all gold offline, irrelevant in this wave

            // text labels
            .setParams({
                "overview": "Use the spikes to kill 10 enemies without letting them catch you.",
                "wave-goal": "You must rely on your mining laser for the wave, as you have [color=special]no bombs[/color]."
            })

            .setWaveParams({
                "on-complete": "wave2:complete",         // complete wave script
                "on-enemy-kill": "wave2:new-enemies"     // killing an enemy spawns 2 in his stead
            });

        // Player must kill 10 enemies with spikes
        map().setWaveRequirement("enemy-kills:deadly-tile", 10);

        // Show progress chart / begin new wave
        map()
            .showWaveProgressChart()
            .beginWave();


        // Start with 3 respawners
map().spawnRandomEnemies(
            3,
            {
                "disposable": False
            }
        );
	</script>
	<script name = 'wave2:cleanup'>
		// Remove timer(s)
        // No timer on this wave.

        // End wave
        map().endWave();
	</script>
	<script name = 'wave2:new-enemies'>
		// Less than 6 already?
        if ( map().countEnemies() &lt; 6 )
        {
            // New respawner
            map().spawnRandomEnemies(
                1,
                {
                    "disposable": False
                }
            );
        }
	</script>
	<script name = 'wave2:complete'>
		map().executeScript("wave2:cleanup");

        // Track that we advanced to the next wave
        session("core.challenge.wave").increment(1);

        // Remove enemies
        map().removeEnemies();

        // Post complete nag
postNewsItem("Wave Complete!", "Prepare for another wave...");

        // Advance to next wave in a moment
        createTimer({
            "name": "timerNextWave",
            "on-complete": "script:wave3:begin",
            "length": 5,
            "measure": "seconds"
        });
	</script>
	<script name = 'wave3:begin'>
		map().executeScript("wave3:cleanup");

        // Params
        map()
            .disableAllGold()    // disable all gold; setting gold rotation will implicitly bring n pieces online

            // text labels
            .setParams({
                "overview": "Collect [color=special]15 gold pieces[/color] as an increasing number of enemies hunts you down!",
                "wave-goal": "Every [color=special]4th[/color] piece of gold you collect summons a [color=special]new enemy[/color].  Plan accordingly!"
            })

            .setWaveParams({
                "on-collect-gold": "wave3:collect-gold", // spawn enemy every nth piece
                "on-complete": "wave3:complete",         // complete wave script
                "gold-rotation-size": 3
            });

        // Player must collect 15 gold
        map().setWaveRequirement("gold", 15);

        // Show progress chart / begin new wave
        map()
            .showWaveProgressChart()
            .beginWave();


        // Start with 2 respawners
map().spawnRandomEnemies(
            2,
            {
                "disposable": False
            }
        );
	</script>
	<script name = 'wave3:cleanup'>
		// End wave
        map().endWave();
	</script>
	<script name = 'wave3:collect-gold'>
		if ( map().getWaveCounter("gold") % 4 == 0 )
        {
            // Add a new respawner
    map().spawnRandomEnemy({
                "disposable": False
            });
        }
	</script>
	<script name = 'wave3:complete'>
		map().executeScript("wave3:cleanup");

        // Remove enemies
        map().removeEnemies();

        // Post complete nag
postNewsItem("Wave Complete!", "All waves cleared...");

        // Show victory menu
        showChallengeOutro();
	</script>
</scripts>
